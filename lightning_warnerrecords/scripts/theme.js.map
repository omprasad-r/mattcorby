{"version":3,"file":"/scripts/theme.js","sources":["webpack:///./src/sass/style.scss","webpack:///./src/scripts/components/Parallax.js","webpack:///./src/scripts/components/SmoothScroll.js","webpack:///./src/scripts/components/index.js","webpack:///./src/scripts/components/sections/Artists.js","webpack:///./src/scripts/components/sections/Careers.js","webpack:///./src/scripts/components/sections/Landing.js","webpack:///./src/scripts/components/sections/News.js","webpack:///./src/scripts/components/sections/Waves.js","webpack:///./src/scripts/components/sections/animations/Title.js","webpack:///./src/scripts/events/Events.js","webpack:///./src/scripts/events/Mouse.js","webpack:///./src/scripts/events/Orientation.js","webpack:///./src/scripts/events/Raf.js","webpack:///./src/scripts/events/Resize.js","webpack:///./src/scripts/events/Scroll.js","webpack:///./src/scripts/events/VS.js","webpack:///./src/scripts/events/index.js","webpack:///./src/scripts/gl/Elem.js","webpack:///./src/scripts/gl/PlanePool.js","webpack:///./src/scripts/gl/components/Artists.js","webpack:///./src/scripts/gl/components/Careers.js","webpack:///./src/scripts/gl/components/Landing.js","webpack:///./src/scripts/gl/components/Plane.js","webpack:///./src/scripts/gl/components/Waves.js","webpack:///./src/scripts/gl/components/index.js","webpack:///./src/scripts/gl/index.js","webpack:///./src/scripts/gl/shaders/fragment/artists.frag","webpack:///./src/scripts/gl/shaders/fragment/careers.frag","webpack:///./src/scripts/gl/shaders/fragment/full-screen-video.frag","webpack:///./src/scripts/gl/shaders/fragment/rgb-split.frag","webpack:///./src/scripts/gl/shaders/index.js","webpack:///./src/scripts/gl/shaders/shaders.js","webpack:///./src/scripts/highway/AssetLoader.js","webpack:///./src/scripts/highway/animations/Fade.js","webpack:///./src/scripts/highway/index.js","webpack:///./src/scripts/highway/renderers/Default.js","webpack:///./src/scripts/highway/renderers/Home.js","webpack:///./src/scripts/highway/renderers/index.js","webpack:///./src/scripts/highway/transitions/Default.js","webpack:///./src/scripts/highway/transitions/index.js","webpack:///./src/scripts/store.js","webpack:///./src/scripts/theme.js","webpack:///./src/scripts/utils/bindAll.js","webpack:///./src/scripts/utils/index.js","webpack:///./src/scripts/utils/lerp.js","webpack:///./src/scripts/utils/listener.js","webpack:///./src/scripts/utils/normalize.js","webpack:///./src/scripts/utils/selector.js","webpack:///./src/scripts/utils/visible.js","webpack:///./src/scripts/utils/wrap.js"],"sourcesContent":["// removed by extract-text-webpack-plugin","import store from '../store'\n\nimport { Events } from '../events'\nimport gsap from 'gsap'\n\nclass Parallax {\n  constructor(elems) {\n    this.elems = elems\n\n    this.cache = null\n    this.stickies = null\n\n    this.state = {\n      isResizing: false,\n    }\n\n    this.init()\n  }\n\n  run = ({ current }) => {\n    this.state.current = current\n    this.animateElems()\n  }\n\n  animateElems() {\n    for (let i = 0; i < this.cache.length; i++ ) {\n      const { height, top, bottom, tl, duration, isTop, isBottom } = this.cache[i]\n      const { isVisible, start, end } = this.isVisible(top, bottom)\n\n      if (isVisible || this.state.isResizing) {\n        const { progress } = this.intersectRatio(height, top, bottom, duration, isTop, isBottom)\n        tl.progress(progress)\n      }      \n    }\n\n    for (let i = 0; i < this.stickies.length; i++) {\n      const { el, top, bottom, height } = this.stickies[i]\n      const { isVisible } = this.isVisible(top, bottom)\n\n      if (isVisible) {\n        const translate = this.state.current - top\n        const transform = Math.min(Math.max(translate, 0), height - store.bounds.wh)\n        const progress = transform / (height - store.bounds.wh)\n\n        el.style.transform = `translate3d(0, ${transform}px, 0)`\n        el.style.willChange = 'transform'\n      }\n    }\n  }\n\n  isVisible(top, bottom) {\n    const { current } = this.state\n\n    const start = top - current\n    const end = bottom - current\n    const isVisible = start < store.bounds.wh && end > 0\n\n    return {\n      isVisible,\n      start,\n      end\n    }\n  }\n\n  intersectRatio = (height, top, bottom, duration, isTop, isBottom) => {\n    const progress = (this.state.current - top) / (store.bounds.wh * 2) + 0.5\n    /*const start = top - store.bounds.wh\n    const end = (store.bounds.wh + bottom + height) * duration\n\n    let progress\n    let progressEnd\n\n    if (isTop) {\n      progressEnd = store.bounds.wh - (store.bounds.wh - height) + end \n    } else if (isBottom) {\n      progressEnd = end + store.bounds.wh - start\n    } else {\n      progressEnd = end + store.bounds.wh + height\n    }\n\n    progress = Math.abs(start / progressEnd)\n    progress = math.norm(progress, 0, 1)*/\n\n    return {\n      progress\n    }\n  }\n\n  getCache() {\n    if (this.elems) {\n      this.cache = []\n      this.elems.forEach(el => {\n        if (el.dataset.animateMobile === undefined && store.isDevice) return\n\n        const tl = gsap.timeline({ paused: true })\n        const from = JSON.parse(el.dataset.from)\n        const to = {...JSON.parse(el.dataset.to), ...{ ease: 'linear', duration: 1 }}\n\n        tl.fromTo(el, from, to)\n\n        tl.progress(1)\n        const cache = {}\n        const { top, bottom, height } = el.getBoundingClientRect()\n        tl.progress(0)\n\n        let offsetTop = 0\n        let offsetBottom = 0\n        \n        cache.isBottom = bottom >= (store.scrollHeight)\n        cache.isTop = top < store.bounds.wh\n        cache.el = el\n        cache.tl = tl\n        cache.duration = el.dataset.duration || 1\n        \n        // Top\n        if (cache.isTop) {\n          cache.top = store.bounds.wh + offsetTop\n        } else {\n          cache.top = top - offsetTop\n        }\n\n        // Bottom\n        if (cache.isTop) {\n          cache.bottom = bottom\n        } else if (cache.isBottom && !cache.isTop) {\n          cache.bottom = bottom - store.bounds.wh\n        } else {\n          cache.bottom = bottom + offsetBottom\n        }\n\n        // Height\n        if (cache.isBottom) { \n          cache.height = 0\n        } else {\n          cache.height = height\n        }\n\n        this.cache.push(cache)\n      })\n    }\n  }\n\n  getStickies() {\n    this.stickies = []\n    const { wh } = store.bounds\n    const elems = document.querySelectorAll('[data-stick]')\n\n    elems.forEach(el => {\n      const parent = el.closest('[data-stick-parent]')\n      const { top, bottom, height } = parent.getBoundingClientRect()\n      const line = el.querySelector('.js-scroll-line')\n\n      this.stickies.push({\n        el, \n        top, bottom, height,\n        line\n      })\n    })\n  }\n\n  updateCache() {\n    this.elems.forEach(elem => {\n      const { top, bottom } = elem.getBoundingClientRect()\n\n      Object.assign(elem, {\n        top: top > store.bounds.wh ? top : store.bounds.wh,\n        bottom: bottom,\n        height: bottom - top,        \n      })\n    })\n  }\n\n  addListeners() {\n    Events.on('tick', this.run)\n    Events.on('resize', this.onResize)   \n  }\n\n  removeListeners() {\n    Events.off('tick', this.run)\n    Events.off('resize', this.onResize)   \n  }\n\n  onResize = () => {\n    this.state.isResizing = true\n    this.updateCache()\n    this.state.isResizing = false\n  }\n\n  destroy() {\n    this.removeListeners()\n\n    this.cache = null\n    this.elems = null\n    this.state = null\n  }\n\n  init() {\n    this.getCache()\n    this.getStickies()\n    this.addListeners()\n  }\n}\n\nexport default Parallax","import store from '../store.js'\nimport { Events } from '../events'\nimport { bindAll } from '../utils'\n\nclass SmoothScroll {\n\n    constructor() {\n        bindAll(this, 'run', 'resize')\n        this.el = store.dom.scroll || document.querySelector('[data-smooth]')\n        this.elems = null\n        this.current = 0\n        this.threshold = 100\n        this.sections = null\n    }\n\n    init(elems) {\n        this.elems = elems || document.querySelectorAll('[data-smooth-item]')\n        this.getSections()\n        this.on()\n    }\n\n    update(elems) {\n        this.elems = elems || document.querySelectorAll('[data-smooth-item]')\n        this.getSections()\n    }\n\n    clean() {\n        this.elems = this.sections = null\n    }\n\n    run({ current }) {\n        this.current = current\n        this.transformSections()\n    }\n\n    transformSections() {\n        if (!this.sections) return\n        const { resize } = store.flags\n\n        for (let i = 0; i < this.sections.length; i++) {\n            const section = this.sections[i]\n            const { isVisible, transform } = this.isVisible(section)\n\n            if (isVisible || resize) {\n                section.out = false\n                section.el.style.transform = this.getTransform(transform)\n            } else if (!section.out) {\n                section.out = true\n                section.el.style.transform = this.getTransform(transform)\n            }\n        }\n    }\n\n    isVisible({ top, bottom, offset, speed }) {\n        const { wh } = store.bounds\n        const translate = this.current * speed\n        const transform = translate - offset\n        const start = (top + offset) - translate\n        const end = (bottom + offset) - translate\n        const isVisible = start < (this.threshold + wh) && end > -this.threshold\n\n        return {\n            isVisible,\n            transform\n        }\n    }\n\n    getTransform(transform) {\n        return `translate3d(0, ${-transform}px, 0)`\n    }\n\n    getVars(el) {\n        const { wh } = store.bounds\n        const speed = el.dataset.speed || 1\n        const { top, bottom, height } = el.getBoundingClientRect()\n        const centering = (wh / 2) - (height / 2)\n        const offset = top < wh ? 0 : ((top - centering) * speed) - (top - centering)\n        const scrollable = height > wh\n\n        return {\n            speed,\n            top, bottom,\n            offset,\n            scrollable\n        }\n    }\n\n    getSections() {\n        if (!this.elems) return\n\n        this.sections = null\n        this.sections = []\n\n        this.elems.forEach((el) => {\n            el.style.transform = 'translate3d(0, 0, 0)'\n            const { speed, top, bottom, scrollable, offset } = this.getVars(el)\n\n            this.sections.push({\n                el,\n                top, bottom,\n                offset, speed,\n                scrollable,\n                out: true,\n            })\n\n            store.dom.sections = this.sections\n        })\n\n        // console.log(this.sections)\n    }\n\n    resize() {\n        if (!this.sections) return\n        this.sections.forEach(section => {\n            section.el.style.transform = 'translate3d(0, 0, 0)'\n            const { top, bottom, offset } = this.getVars(section.el)\n\n            Object.assign(section, {\n                top, bottom,\n                offset\n            })\n        })\n\n        this.transformSections()\n    }\n\n    on() {\n        Events.on('tick', this.run)\n        Events.on('resize', this.resize)\n    }\n\n    off() {\n        Events.off('tick', this.run)\n        Events.off('resize', this.resize)\n    }\n}\n\nexport default new SmoothScroll()","import SmoothScroll from './SmoothScroll'\nimport Parallax from './Parallax'\n\n// Section Components\nimport Landing from './sections/Landing'\nimport Waves from './sections/Waves'\nimport Careers from './sections/Careers'\nimport Artists from './sections/Artists'\nimport News from './sections/News'\n\nexport {\n  SmoothScroll,\n  Parallax,\n  Landing,\n  Waves,\n  Careers,\n  Artists,\n  News\n}","// import store from '../store.js'\nimport { Events } from '../../events'\nimport { qs, qsa, listener } from '../../utils'\nimport Title from './animations/Title'\nimport gsap from 'gsap'\n// import gsap from 'gsap'\n\nclass Artists {\n\n    constructor(el) {\n        Events.bindAll(this, ['in', 'out', 'onMouseEnter', 'onMouseLeave'])\n\n        this.el = el\n        this.video = qs('video.artists-video', this.el)\n        this.artists = qsa('.artists__letter__list__item', this.el)\n        this.title = qs('.artists__title', this.el)\n        this.selectedArtistA = qs('.artists__selected-artist--a .artists__selected-artist__inner', this.el)\n        this.selectedArtistB = qs('.artists__selected-artist--b .artists__selected-artist__inner', this.el)\n        this.selectedArtistAName = qs('.artists__selected-artist--a .artists__selected-artist__inner__name', this.el)\n        this.selectedArtistBName = qs('.artists__selected-artist--b .artists__selected-artist__inner__name', this.el)\n        this.transitioned = false\n        this.titleTimeline = new Title(this.el)\n\n        this.initVideo()\n        this.initArtists()\n        this.addEvents()\n    }\n\n    addEvents() {\n        Events.on('artistsIn', this.in)\n        Events.on('artistsOut', this.out)\n    }\n\n    initArtists() {\n        [...this.artists].forEach(artist => {\n            listener(artist, 'a', 'mouseenter', this.onMouseEnter)\n            listener(artist, 'a', 'mouseleave', this.onMouseLeave)\n        })\n    }\n\n    initVideo() {\n        const playPromise = this.video.play()\n\n        playPromise.then(() => {\n            this.video.pause()\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    onMouseEnter(e) {\n        if (!this.transitioned) return\n        const artist = e.currentTarget\n        const duration = 0.4\n        artist.classList.add('is-active')\n        this.selectedArtistAName.innerHTML = e.currentTarget.innerHTML\n\n        if (this.artistHoverTimeline && this.artistHoverTimeline.isActive()) return\n\n        this.artistHoverTimeline = gsap.timeline()\n\n        this.artistHoverTimeline.to(this.title, duration, {\n            rotateX: -90,\n            ease: 'linear.easeNone'\n        }, 0)\n\n        this.artistHoverTimeline.to(this.selectedArtistA, duration, {\n            rotateX: 0,\n            ease: 'linear.easeNone'\n        }, 0.25)\n\n    }\n\n    onMouseLeave(e) {\n        const artist = e.currentTarget\n        artist.classList.remove('is-active')\n\n        // const tl = gsap.timeline()\n\n        // tl.to(this.selectedArtist, 1, {\n        //     rotateX: -90,\n        //     ease: 'linear.none'\n        // }, 0)\n        // tl.to(this.title, 1, {\n        //     rotateX: 0,\n        //     ease: 'linear.none'\n        // }, 0)\n    }\n\n    in() {\n        this.video.play()\n\n        if (this.transitioned) return\n        this.titleTimeline.in()\n        this.transitioned = true\n    }\n\n    out() {\n        this.video.pause()\n    }\n\n    destroy() {\n        Events.off('artistsIn', this.in)\n        Events.off('artistsOut', this.out)\n    }\n}\n\nexport default Artists","// import store from '../store.js'\nimport { Events } from '../../events'\nimport { qs } from '../../utils'\nimport Title from './animations/Title'\n// import gsap from 'gsap'\n\nclass Careers {\n\n    constructor(el) {\n        Events.bindAll(this, ['in', 'out'])\n\n        this.el = el\n        this.started = false\n        this.video = qs('video.careers-video', this.el)\n        this.titleTimeline = new Title(this.el)\n\n        this.addEvents()\n        this.initVideo()\n    }\n\n    addEvents() {\n        Events.on('careersIn', this.in)\n        Events.on('careersOut', this.out)\n    }\n\n    initVideo() {\n        const playPromise = this.video.play()\n\n        playPromise.then(() => {\n            this.video.pause()\n          }).catch((error) => {\n            // Automatic playback failed.\n            // Show a UI element to let the user manually start playback.\n            console.log(error)\n          })\n    }\n\n    in() {\n        this.video.play()\n\n        if (this.transitioned) return\n        this.titleTimeline.in()\n        this.transitioned = true\n    }\n\n    out() {\n        this.video.pause()\n    }\n\n    destroy() {\n        Events.off('careersIn', this.in)\n        Events.off('careersOut', this.out)\n    }\n}\n\nexport default Careers","// import store from '../store.js'\nimport { Events } from '../../events'\nimport { qs, listener } from '../../utils'\nimport gsap from 'gsap'\n\nclass Landing {\n\n    constructor(el) {\n        Events.bindAll(this, ['in', 'out', 'muteVideo', 'unmuteVideo', 'muteToggle'])\n        this.el = el\n\n        this.video = qs('video.landing-video', this.el)\n        this.muteToggleBtn = qs('.landing__mute-toggle', this.el)\n        this.muteToggleBtnText = qs('span', this.muteToggleBtn)\n\n        this.addEvents()\n        this.initVideo()\n    }\n\n    addEvents() {\n        Events.on('landingIn', this.in)\n        Events.on('landingOut', this.out)\n        Events.on('muteLandingVideo', this.muteVideo)\n        Events.on('unmuteLandingVideo', this.unmuteVideo)\n\n        listener(this.muteToggleBtn, 'a', 'click', this.muteToggle)\n    }\n\n    initVideo() {\n        // this.createVolumeTimeline()\n        // console.log(this.video)\n        this.video.play()\n    }\n\n    in() {\n        this.unmuteVideo()\n    }\n\n    out() {\n        if (this.muting) return\n        this.muteVideo()\n    }\n\n\n    muteToggle() {\n        if (this.muteToggleBtnText.innerHTML === 'off') {\n            this.muteToggleBtnText.innerHTML = 'on'\n            this.video.muted = false\n            if (!this.lowPassFilter) {\n                this.createLowPassFilter()\n                this.createVolumeTimeline()\n            }\n            return\n        }\n\n        this.muteToggleBtnText.innerHTML = 'off'\n        this.video.muted = true\n    }\n\n    createLowPassFilter() {\n        this.lowPassFilter = true\n        var AudioContext = window.AudioContext || window.webkitAudioContext\n        var audioCtx = new AudioContext()\n\n        //set up the different audio nodes we will use for the app\n        var biquadFilter = audioCtx.createBiquadFilter()\n\n        // connect the nodes together\n\n        const source = audioCtx.createMediaElementSource(this.video)\n        source.connect(biquadFilter)\n        biquadFilter.connect(audioCtx.destination)\n\n        // Manipulate the Biquad filter\n        biquadFilter.type = 'lowpass'\n        biquadFilter.frequency.value = 22050\n\n        this.biquadFilter = biquadFilter\n    }\n\n    createVolumeTimeline() {\n        this.volumeTimeline = gsap.timeline({\n            paused: true,\n        })\n        .fromTo(this.biquadFilter.frequency, 1, {\n            value: 90\n        }, {\n            value: 22050,\n            ease: 'expo.in',\n            immediateRender: false\n        }, 0)\n        .fromTo(this.video, 1, {\n            volume: 0.5\n        }, {\n            volume: 1,\n            ease: 'expo.in',\n            immediateRender: false\n        }, 0)\n    }\n\n    muteVideo() {\n        if (!this.volumeTimeline) return\n\n        // console.log('Mute Landing Video')\n        this.muting = true\n\n        this.volumeTimeline.pause()\n\n        if (this.unmuteTween) this.unmuteTween.kill()\n\n        this.muteTween = this.volumeTimeline.tweenFromTo(this.volumeTimeline.duration(), 0, {\n            ease: 'expo.inOut',\n            callbackScope: this,\n            // onComplete: () => {  console.log('pause'); this.video.pause() },\n        })\n    }\n\n    unmuteVideo() {\n        if (!this.volumeTimeline) return\n\n        // console.log('Unmute Landing Video')\n        this.muting = false\n\n        this.volumeTimeline.pause()\n\n        if (this.muteTween) this.muteTween.kill()\n\n        this.unmuteTween = this.volumeTimeline.tweenFromTo(0, this.volumeTimeline.duration(), {\n            ease: 'expo.inOut',\n            callbackScope: this,\n            // onStart: () => { console.log('play'); this.video.play() },\n        })\n    }\n\n    destroy() {\n        this.video.pause()\n        Events.off('landingIn', this.in)\n        Events.off('landingOut', this.out)\n        Events.off('muteLandingVideo', this.muteVideo)\n        Events.off('unmuteLandingVideo', this.unmuteVideo)\n    }\n}\n\nexport default Landing","// import store from '../store.js'\nimport { Events } from '../../events'\nimport { qs } from '../../utils'\nimport Title from './animations/Title'\n// import gsap from 'gsap'\n\nclass News {\n\n    constructor(el) {\n        Events.bindAll(this, ['in', 'out'])\n\n        this.el = el\n\n        this.transitioned = false\n\n        this.titleTimeline = new Title(this.el)\n        this.addEvents()\n    }\n\n    addEvents() {\n        Events.on('newsIn', this.in)\n        Events.on('newsOut', this.out)\n    }\n\n    in() {\n        if (this.transitioned) return\n        this.titleTimeline.in()\n        this.transitioned = true\n    }\n\n    out() {\n    }\n\n    destroy() {\n        Events.off('newsIn', this.in)\n        Events.off('newsOut', this.out)\n    }\n}\n\nexport default News","// import store from '../store.js'\nimport { Events } from '../../events'\nimport { qs } from '../../utils'\n// import gsap from 'gsap'\n\nclass Waves {\n\n    constructor(el) {\n        Events.bindAll(this, ['in', 'out'])\n\n        this.el = el\n\n        this.started = false\n\n        this.video = qs('video.waves-video', this.el)\n\n        // console.dir(this.video)\n\n        this.addEvents()\n        this.initVideo()\n    }\n\n    addEvents() {\n        Events.on('wavesIn', this.in)\n        Events.on('wavesOut', this.out)\n    }\n\n    initVideo() {\n        const playPromise = this.video.play()\n\n        playPromise.then(() => {\n            this.video.pause()\n          }).catch((error) => {\n            console.log(error)\n          })\n    }\n\n    in() {\n        this.video.play()\n    }\n\n    out() {\n        this.video.pause()\n    }\n\n    destroy() {\n        Events.off('wavesIn', this.in)\n        Events.off('wavesOut', this.out)\n    }\n}\n\nexport default Waves","import gsap from 'gsap'\nimport { qs } from '../../../utils'\n\nclass Title {\n\n    constructor(el, onCompleteCallback = false) {\n        this.el = el\n        this.onCompleteCallback = onCompleteCallback\n\n        this.weAre = qs('.title__we-are', this.el)\n        this.weAreInner = qs('.title__we-are__inner', this.el)\n        this.text = qs('.title__text', this.el)\n        this.textInner = qs('.title__text__inner', this.el)\n\n        this.createTimeline()\n    }\n\n    createTimeline() {\n        const duration = 1.5\n\n        this.timeline = gsap.timeline({\n            paused: true,\n        })\n        .fromTo(this.weAre, duration, {\n            y: \"200%\"\n        }, {\n            y: \"0%\",\n            ease: 'expo.out',\n            immediateRender: true\n        }, 0)\n        .fromTo(this.text, duration, {\n            y: \"300%\"\n        }, {\n            y: \"0%\",\n            ease: 'expo.out',\n            immediateRender: true\n        }, 0.05)\n        .fromTo(this.weAreInner, duration, {\n            y: \"-100%\"\n        }, {\n            y: \"0%\",\n            ease: 'expo.out',\n            immediateRender: true\n        }, 0)\n        .fromTo(this.textInner, duration, {\n            y: \"-100%\"\n        }, {\n            y: \"0%\",\n            ease: 'expo.out',\n            immediateRender: true\n        }, 0.05)\n    }\n\n    in() {\n        // console.log('title in')\n        if (this.outTween) this.outTween.kill()\n        this.timeline.pause().timeScale(1)\n        this.inTween = this.timeline.tweenFromTo(0, this.timeline.duration(), {\n            ease: 'expo.out',\n            onComplete: () => { this.text.style.overflow = 'visible' },\n            delay: 0.2\n        })\n    }\n\n    out() {\n        // console.log('title out')\n        if (this.inTween) this.inTween.kill()\n        this.timeline.pause().timeScale(5)\n        this.outTween = this.timeline.tweenFromTo(this.timeline.duration(), 0, {\n            ease: 'expo.out',\n        })\n    }\n\n}\n\nexport default Title","import e from '@unseenco/e'\nconst Events = new e()\n\nexport default Events","import store from '../store'\nimport { listener } from '../utils'\nimport Events from './Events'\n\nclass GlobalMouse {\n\n  constructor() {\n    this.state = {\n      on: 0,\n      off: 0,\n      coords: {\n        x: 0,\n        y: 0\n      }\n    }\n    this.events = {\n      move: store.isDevice ? 'touchmove' : 'mousemove',\n      down: store.isDevice ? 'touchstart' : 'mousedown',\n      up: store.isDevice ? 'touchend' : 'mouseup'\n    }\n    this.on()\n  }\n\n  on() {\n    const { move, down, up } = this.events\n    listener(window, 'a', move, this.onMove)\n    listener(window, 'a', down, this.onDown)\n    listener(window, 'a', up, this.onUp)\n    listener(window, 'a', 'click', this.onClick)\n  }\n\n  getPos(e) {\n    const x = e.changedTouches ? e.changedTouches[0].clientX : e.clientX\n    const y = e.changedTouches ? e.changedTouches[0].clientY : e.clientY\n    const target = e.target\n\n    return {\n      x, y, target\n    }\n  }\n\n  onMove = (e) => {\n    const { x, y, target } = this.getPos(e)\n    Events.emit('mousemove', {\n      x, y, target, e\n    })\n  }\n\n  onDown = (e) => {\n    const { x, y, target } = this.getPos(e)\n    this.state.on = x\n    Events.emit('mousedown', {\n      x, y, target\n    })\n  }\n\n  onUp = (e) => {\n    const { x, target } = this.getPos(e)\n    const state = this.state\n    state.off = x\n    const isClick = Math.abs(state.on - state.off) > 10\n    Events.emit('mouseup', {\n      x, target, isClick\n    })\n  }\n\n  onClick = (e) => {\n    Events.emit('click', e)    \n  }\n}\n\nexport default new GlobalMouse()","import store from '../store'\nimport Events from './Events'\nimport { bindAll, listener } from '../utils'\n\nclass Orientation {\n\n  constructor() {\n    bindAll(this, 'onOrentationChange')\n    this.init()\n  }\n\n  onOrientationChange() {\n    const { dom } = store\n    if (dom.body.classList.contains('is-orientation-changed')) {\n      dom.body.classList.remove('is-orientation-changed')\n    } else {\n      dom.body.classList.add('is-orientation-changed')\n    }\n    Events.emit('orientationchange')\n  }\n\n  on() {\n    listener(window, 'orientationchange', this.onOrientationChange)\n  }\n\n  init() {\n    this.on()\n  }\n}\n\nexport default new Orientation()\n","import gsap from 'gsap'\nimport store from '../store'\nimport Events from './Events'\nimport { bindAll, lerp } from '../utils'\n\nclass Raf {\n\n  constructor() {\n    bindAll(this, 'tick', 'onScroll', 'onMove', 'reset')\n    this.target = 0\n    this.current = 0\n    this.currentRounded = 0\n    this.mouse = {\n      x: 0,\n      y: 0,\n      target: null\n    }\n    this.ease = 0.115\n    this.init()\n  }\n\n  tick() {\n    const { flags } = store\n\n    this.current = lerp(this.current, this.target, this.ease)\n    this.currentRounded = Math.round(this.current * 100) / 100\n\n    if (!flags.scrolled && this.currentRounded > 0) {\n      flags.scrolled = true\n    }\n\n    Events.emit('tick', {\n      target: this.target,\n      current: this.currentRounded,\n      mouse: this.mouse\n    })\n  }\n\n  clampTarget() {\n    this.target = Math.min(Math.max(this.target, 0), store.bounds.scroll)\n  }\n\n  onScroll({ y }) {\n    this.target += y\n    this.clampTarget()\n  }\n\n  onMove = ({ y, x, target }) => {\n    this.mouse.x = x\n    this.mouse.y = y\n    this.mouse.target = target\n  }\n\n  reset() {\n    this.target = this.current = this.currentRounded = 0\n  }\n\n  on() {\n    gsap.ticker.add(this.tick)\n    Events.on('scroll', this.onScroll)\n    Events.on('resetScroll', this.reset)\n    Events.on('mousemove', this.onMove)\n  }\n\n  init() {\n    this.on()\n  }\n}\n\nexport default new Raf()","import debounce from 'lodash.debounce'\n\nimport store from '../store'\nimport Events from './Events'\nimport GlobalScroll from './Scroll'\nimport { bindAll, listener } from '../utils'\n\nclass Resize {\n\n  constructor() {\n    bindAll(this, 'onResize')\n    this.init()\n  }\n\n  onResize() {\n    const { flags, bounds } = store\n    flags.resize = true\n    bounds.ww = window.innerWidth\n    bounds.wh = window.innerHeight\n    GlobalScroll.setScrollBounds()\n    this.setAspect()\n    Events.emit('resize')\n    flags.resize = false\n  }\n\n  setAspect() {\n    const { bounds, dom, flags } = store\n    if (bounds.height <= bounds.width) {\n      dom.body.classList.remove('is-portrait')\n      dom.body.classList.add('is-landscape')\n      flags.landscape = true\n    } else {\n      dom.body.classList.remove('is-landscape')\n      dom.body.classList.add('is-portrait')\n      flags.landscape = false\n    }\n  }\n\n  on() {\n    listener(window, 'a', 'resize', debounce(this.onResize, 200))\n  }\n\n  init() {\n    this.setAspect()\n    this.on()\n  }\n}\n\nexport default new Resize()\n","import store from '../store'\nimport Events from './Events'\n// import Pointer from './Pointer'\nimport VS from './VS'\nimport { bindAll, listener } from '../utils'\n\nclass Scroll {\n\n  constructor() {\n    bindAll(this, 'onEvent', 'onScroll', 'onResize', 'setScrollBounds')\n\n    this.currentSectionID = 0\n    this.lastSectionID = null\n\n    this.init()\n  }\n\n  setScrollBounds() {\n    const { dom, bounds } = store\n    const height = dom.scroll.getBoundingClientRect().height\n    bounds.scroll = height > bounds.wh ? height - bounds.wh : 0\n  }\n\n  // TODO Handle pages other than home\n  onEvent(e) {\n    if (store.flags.locked || !store.dom.sections) return\n\n    const { wh } = store.bounds\n    const delta = e.deltaY * -1\n\n    if ((Math.abs(delta) > 50) && store.flags.allowScroll) {\n\n      // +1 = scrolling down\n      // -1 = scrolling up\n      this.direction = Math.sign(delta)\n\n      // Prevent emitting scroll event if attempting to scroll beyond bounds\n      if ((this.direction === -1) && (this.currentSectionID === 0)) return\n      if ((this.direction === 1) && (this.currentSectionID === (store.dom.sections.length - 1))) return\n\n      // Prevent scroll before we emit event\n      store.flags.allowScroll = false\n\n      // Allow scrolling again after timeout\n      setTimeout(() => {\n        store.flags.allowScroll = true\n      }, 250)\n\n      Events.emit('scroll', {\n        y: wh * this.direction,\n      })\n\n      this.handleSections(this.direction)\n    }\n  }\n\n  onScroll() {\n    // Pointer.run()\n    Events.emit('scroll', {\n      y: window.scrollY,\n    })\n  }\n\n  onResize() {\n    const { wh } = store.bounds\n    console.log((wh * this.currentSectionID))\n    Events.emit('resetScroll')\n    Events.emit('scroll', {\n      y: (wh * this.currentSectionID),\n    })\n  }\n\n  on() {\n    const { flags } = store\n    if (flags.smooth) {\n      this.vs = new VS()\n      this.vs.on(this.onEvent)\n      Events.on('resize', this.onResize)\n    } else {\n      listener(window, 'a', 'scroll', this.onScroll, true)\n    }\n  }\n\n  handleSections() {\n    // Update current and last section IDs\n    this.lastSectionID = this.currentSectionID\n    this.currentSectionID += this.direction\n\n    // Update current and last sections\n    this.currentSection = store.dom.sections[this.currentSectionID]\n    this.lastSection = store.dom.sections[this.lastSectionID]\n\n    // Emit 'in' event for current setcion\n    Events.emit(`${this.currentSection.el.dataset.sectionId}In`)\n\n    // Emit 'out' event for current setcion\n    Events.emit(`${this.lastSection.el.dataset.sectionId}Out`)\n  }\n\n  init() {\n    this.on()\n  }\n}\n\nexport default new Scroll()","import store from '../store'\nimport { listener } from '../utils'\nimport Events from './Events'\n\nconst event_id = 'vs'\n\nclass VS {\n\n  constructor(opts = {}) {\n    this.el = window\n\n    this.opts = Object.assign({\n      mouseMultiplier: store.isWindows ? 0.8 : 0.45,\n      touchMultiplier: 3,\n      firefoxMultiplier: 90\n    }, opts)\n\n    this.event = {\n      y: 0,\n      deltaY: 0\n    }\n\n    this.touchY = null\n  }\n\n  emit(e) {\n    const event = this.event\n    event.y += event.deltaY\n\n    Events.emit(event_id, {\n      y: event.y,\n      deltaY: event.deltaY,\n      originalEvent: e\n    })\n  }\n\n  onWheel = (e) => {\n    const { firefoxMultiplier, mouseMultiplier } = this.opts\n    const event = this.event\n\n    event.deltaY = e.wheelDeltaY || e.deltaY * -1\n\n    if (store.isFirefox && e.deltaMode === 1) {\n      event.deltaY *= firefoxMultiplier\n    }\n\n    event.deltaY *= mouseMultiplier\n\n    this.emit(e)\n  }\n\n  onTouchStart = (e) => {\n    const touch = e.targetTouches ? e.targetTouches[0] : e\n    this.touchY = touch.pageY\n  }\n\n  onTouchMove = (e) => {\n    const { touchMultiplier } = this.options\n    const event = this.event\n    const touch = e.targetTouches ? e.targetTouches[0] : e\n\n    event.deltaY = (touch.pageY - this.touchY) * touchMultiplier\n    this.touchY = touch.pageY\n\n    this.emit(e)\n  }\n\n  addListeners() {\n    listener(this.el, 'a', 'wheel', this.onWheel, true)\n  }\n\n  removeListeners() {\n    listener(this.el, 'r', 'wheel', this.onWheel, true)\n  }\n\n  on(callback) {\n    Events.on(event_id, callback)\n    this.addListeners()\n  }\n\n  off(callback) {\n    Events.off(event_id, callback)\n    this.removeListeners()\n  }\n}\n\nexport default VS","import Events from './Events'\nimport GlobalScroll from './Scroll'\nimport GlobalRaf from './Raf'\nimport GlobalResize from './Resize'\nimport GlobalOrientation from './Orientation'\nimport GlobalMouse from './Mouse'\n// import Pointer from './Pointer'\nimport VS from './VS'\n\nexport {\n  Events,\n  GlobalScroll,\n  GlobalRaf,\n  GlobalResize,\n  GlobalOrientation,\n  GlobalMouse,\n  // Pointer,\n  VS\n}","import { Object3D, TextureLoader } from 'three'\nimport { Events } from '../events'\nimport store from '../store'\nimport Gl from './index'\nimport { bindAll } from '../utils'\n\nexport default class extends Object3D {\n\n    init(args = {}) {\n        bindAll(this, 'onResize')\n        this.args = args\n        this.el = this.args.el\n        this.name = this.args.name\n        this.loader = new TextureLoader()\n\n        this.onResize()\n\n        Events.on('resize', this.onResize)\n    }\n\n    onResize() {\n        const rect = this.el.getBoundingClientRect()\n\n        this.bounds = {\n            left: rect.left,\n            top: rect.top,\n            width: rect.width,\n            height: rect.height,\n        }\n\n        this.updateSize()\n        this.updatePosition()\n    }\n\n    calculateUnitSize(distance = this.position.z) {\n        const vFov = Gl.camera.fov * Math.PI / 180\n        const height = 2 * Math.tan(vFov / 2) * distance\n        const width = height * Gl.camera.aspect\n        return {\n            width,\n            height\n        }\n    }\n\n    updateSize() {\n        this.camUnit = this.calculateUnitSize(Gl.camera.position.z - this.position.z)\n\n\n        const { ww, wh } = store.bounds\n        const x = this.bounds.width / ww\n        const y = this.bounds.height / wh\n\n        if (!x || !y) {\n            return\n        }\n\n        this.scale.x = this.camUnit.width * x\n        this.scale.y = this.camUnit.height * y\n    }\n\n    updatePosition(pos) {\n        const y = pos\n        const { ww, wh } = store.bounds\n        const { left, top } = this.bounds\n\n        this.position.x = -(this.camUnit.width / 2) + (this.scale.x / 2)\n        this.position.y = (this.camUnit.height / 2) - (this.scale.y / 2)\n\n        this.position.x += (left / ww) * this.camUnit.width\n        this.position.y -= ((top - y) / wh) * this.camUnit.height\n    }\n\n    onTick(current) {\n        this.updatePosition(current)\n    }\n\n    destroy() {\n        this.parent && this.parent.remove(this)\n    }\n}","import Gl from './index'\nimport * as Component from './components'\n\nclass PlanePool {\n\n    constructor() {\n        this.planes = {}\n    }\n\n    fromDom(el) {\n        const name = el.dataset.glId\n        const component = el.dataset.glComponent\n        const plane = this.planes[name]\n        if (plane) {\n            Gl.scene.add(plane)\n        } else {\n            if (component) {\n                new Component[component]().init({ el, name })\n            } else {\n                new Component['Plane']().init({ el, name })\n            }\n        }\n    }\n\n    remove(plane) {\n        plane.destroy()\n    }\n}\n\nexport default new PlanePool()","import {\n    VideoTexture,\n    Mesh,\n    PlaneBufferGeometry,\n    ShaderMaterial,\n    LinearFilter,\n    RGBFormat\n} from 'three'\n\nimport store from '../../store'\nimport { Events } from '../../events'\nimport Elem from '../Elem'\nimport Gl from '../index'\nimport PlanePool from '../PlanePool'\nimport { vertex, artistsFragment } from '../shaders'\nimport { qs, bindAll } from '../../utils'\n\nimport gsap from 'gsap'\n\nconst geometry = new PlaneBufferGeometry(1, 1, 1, 1)\nconst material = new ShaderMaterial({\n    transparent: true,\n    fragmentShader: artistsFragment,\n    vertexShader: vertex,\n})\n\nexport default class Artists extends Elem {\n\n    init(args) {\n        super.init(args)\n\n        const { ww, wh } = store.bounds\n\n        this.geometry = geometry\n        this.material = material.clone()\n\n        this.video = qs('video.artists-video', this.el)\n\n        this.texture = new VideoTexture( this.video )\n        this.texture.minFilter = LinearFilter\n        this.texture.magFilter = LinearFilter\n        this.texture.format = RGBFormat\n\n        this.material.uniforms = {\n            uTime: { value: 0 },\n            uTexture: { value: this.texture },\n            uVelo: { value: 0 },\n        }\n\n        this.mesh = new Mesh(this.geometry, this.material)\n        this.add(this.mesh)\n        Gl.scene.add(this)\n        PlanePool.planes[this.name] = this\n    }\n\n    onTick() {\n        super.onTick()\n    }\n}","import {\n    VideoTexture,\n    Mesh,\n    PlaneBufferGeometry,\n    ShaderMaterial,\n    LinearFilter,\n    RGBFormat\n} from 'three'\n\nimport store from '../../store'\nimport { Events } from '../../events'\nimport Elem from '../Elem'\nimport Gl from '../index'\nimport PlanePool from '../PlanePool'\nimport { vertex, careersFragment } from '../shaders'\nimport { qs, bindAll } from '../../utils'\n\n// import gsap from 'gsap'\n\nconst geometry = new PlaneBufferGeometry(1, 1, 1, 1)\nconst material = new ShaderMaterial({\n    transparent: true,\n    fragmentShader: careersFragment,\n    vertexShader: vertex,\n})\n\nexport default class Careers extends Elem {\n\n    init(args) {\n        super.init(args)\n\n        const { ww, wh } = store.bounds\n\n        this.geometry = geometry\n        this.material = material.clone()\n\n        this.video = qs('video.careers-video', this.el)\n        this.img = qs('img.careers-image', this.el)\n\n        // console.log(this.img.width, this.img.height)\n\n        this.imgTexture = this.loader.load(this.img.currentSrc || this.img.src, (texture) => {\n            if (this.el.dataset.nop2 !== undefined) {\n                texture.minFilter = LinearFilter\n                texture.generateMipmaps = false\n            }\n        })\n\n        this.videoTexture = new VideoTexture( this.video )\n        this.videoTexture.minFilter = LinearFilter\n        this.videoTexture.magFilter = LinearFilter\n        this.videoTexture.format = RGBFormat\n\n        this.material.uniforms = {\n            uTime: { value: 0 },\n            uVideoTexture: { value: this.videoTexture },\n            uImageTexture: { value: this.imgTexture },\n            uVelo: { value: 0 },\n            uScreenSize: { value: [ww, wh] },\n            uVideoSize: { value: [this.video.videoWidth, this.video.videoHeight] },\n            uImageSize: { value: [this.img.width, this.img.height] }\n        }\n\n        this.mesh = new Mesh(this.geometry, this.material)\n        this.add(this.mesh)\n        Gl.scene.add(this)\n        PlanePool.planes[this.name] = this\n    }\n\n    onTick() {\n        super.onTick()\n    }\n}","import {\n    VideoTexture,\n    Mesh,\n    PlaneBufferGeometry,\n    ShaderMaterial,\n    LinearFilter,\n    RGBFormat\n} from 'three'\n\nimport store from '../../store'\nimport { Events } from '../../events'\nimport Elem from '../Elem'\nimport Gl from '../index'\nimport PlanePool from '../PlanePool'\nimport { vertex, fullScreenVideoFragment } from '../shaders'\nimport { qs, bindAll } from '../../utils'\n\nimport gsap from 'gsap'\n\nconst geometry = new PlaneBufferGeometry(1, 1, 1, 1)\nconst material = new ShaderMaterial({\n    transparent: true,\n    fragmentShader: fullScreenVideoFragment,\n    vertexShader: vertex,\n})\n\nexport default class Landing extends Elem {\n\n    init(args) {\n        super.init(args)\n\n        const { ww, wh } = store.bounds\n\n        this.geometry = geometry\n        this.material = material.clone()\n\n        this.video = qs('video.landing-video', this.el)\n\n        this.texture = new VideoTexture( this.video )\n        this.texture.minFilter = LinearFilter\n        this.texture.magFilter = LinearFilter\n        this.texture.format = RGBFormat\n\n        this.material.uniforms = {\n            uTime: { value: 0 },\n            uTexture: { value: this.texture },\n            uVelo: { value: 0 },\n            uScreenSize: { value: [ww, wh] },\n            uVideoSize: { value: [this.video.videoWidth, this.video.videoHeight] }\n        }\n\n        this.mesh = new Mesh(this.geometry, this.material)\n        this.add(this.mesh)\n        Gl.scene.add(this)\n        PlanePool.planes[this.name] = this\n    }\n\n    onTick() {\n        super.onTick()\n    }\n}","import {\n    Mesh,\n    PlaneBufferGeometry,\n    ShaderMaterial,\n    LinearFilter\n} from 'three'\n\nimport Elem from '../Elem'\nimport Gl from '../index'\nimport PlanePool from '../PlanePool'\nimport { vertex, rgbSplitFragment } from '../shaders'\nimport { qs } from '../../utils'\n\nconst geometry = new PlaneBufferGeometry(1, 1, 1, 1)\nconst material = new ShaderMaterial({\n    transparent: true,\n    fragmentShader: rgbSplitFragment,\n    vertexShader: vertex,\n})\n\nexport default class Plane extends Elem {\n    init(args) {\n        super.init(args)\n\n        this.geometry = geometry\n        this.material = material.clone()\n\n        this.img = qs('img', this.el)\n        this.texture = this.loader.load(this.img.currentSrc || this.img.src, (texture) => {\n            if (this.el.dataset.nop2 !== undefined) {\n                texture.minFilter = LinearFilter\n                texture.generateMipmaps = false\n            }\n        })\n\n        this.material.uniforms = {\n            uTime: { value: 0 },\n            uTexture: { value: this.texture },\n            uVelo: { value: 0 }\n        }\n\n        this.mesh = new Mesh(this.geometry, this.material)\n        this.add(this.mesh)\n        Gl.scene.add(this)\n        PlanePool.planes[this.name] = this\n    }\n\n    onTick() {\n        super.onTick()\n    }\n}","import {\n    VideoTexture,\n    Mesh,\n    PlaneBufferGeometry,\n    ShaderMaterial,\n    LinearFilter,\n    RGBFormat\n} from 'three'\n\nimport store from '../../store'\nimport { Events } from '../../events'\nimport Elem from '../Elem'\nimport Gl from '../index'\nimport PlanePool from '../PlanePool'\nimport { vertex, fullScreenVideoFragment } from '../shaders'\nimport { qs, bindAll } from '../../utils'\n\n// import gsap from 'gsap'\n\nconst geometry = new PlaneBufferGeometry(1, 1, 1, 1)\nconst material = new ShaderMaterial({\n    transparent: true,\n    fragmentShader: fullScreenVideoFragment,\n    vertexShader: vertex,\n})\n\nexport default class Waves extends Elem {\n\n    init(args) {\n        super.init(args)\n\n        const { ww, wh } = store.bounds\n\n        this.geometry = geometry\n        this.material = material.clone()\n\n        this.video = qs('video.waves-video', this.el)\n        this.texture = new VideoTexture( this.video )\n        this.texture.minFilter = LinearFilter\n        this.texture.magFilter = LinearFilter\n        this.texture.format = RGBFormat\n\n        this.material.uniforms = {\n            uTime: { value: 0 },\n            uTexture: { value: this.texture },\n            uVelo: { value: 0 },\n            uScreenSize: { value: [ww, wh] },\n            uVideoSize: { value: [this.video.videoWidth, this.video.videoHeight] }\n        }\n\n        this.mesh = new Mesh(this.geometry, this.material)\n        this.add(this.mesh)\n        Gl.scene.add(this)\n        PlanePool.planes[this.name] = this\n    }\n\n    onTick() {\n        super.onTick()\n    }\n}","import Plane from './Plane'\nimport Landing from './Landing'\nimport Waves from './Waves'\nimport Careers from './Careers'\nimport Artists from './Artists'\n\nexport {\n    Plane,\n    Landing,\n    Waves,\n    Careers,\n    Artists,\n}","import {\n    WebGLRenderer,\n    PerspectiveCamera,\n    Scene,\n    Clock\n} from 'three'\n\nimport { Events } from '../events'\nimport store from '../store'\n// import PostFX from './PostFX'\nimport { bindAll } from '../utils'\n\nclass Gl {\n\n    constructor() {\n        bindAll(this, 'onResize')\n\n        this.scene = new Scene()\n\n        const { wh, ww } = store.bounds\n\n        this.camera = new PerspectiveCamera( 45, ww / wh, 0.1, 100 )\n        this.camera.position.z = 50\n\n        this.renderer = new WebGLRenderer({\n            alpha: true,\n            antialias: true\n        })\n        this.renderer.setPixelRatio(1.5)\n        this.renderer.setSize(ww, wh)\n        this.renderer.setClearColor(0xffffff, 0)\n\n        this.clock = new Clock()\n\n        this.state = {\n            target: 0,\n            current: 0,\n            current2: 0,\n            threshold: 200\n        }\n\n        this.diff = 0\n    }\n\n    run = ({ target, current }) => {\n        const children = this.scene.children\n        const state = this.state\n\n        state.target = target\n        state.current = current\n\n        state.current2 += (state.target - state.current2) * 0.065\n        state.diff = (state.target - state.current2) * 0.00035\n\n        for (let i = 0; i < children.length; i++) {\n            children[i].updatePosition(current)\n            children[i].material.uniforms.uVelo.value = state.diff\n        }\n\n        this.render()\n    }\n\n    render() {\n        this.renderer.render(this.scene, this.camera)\n    }\n\n    isVisible({ top, bottom }, offset, speed) {\n        const { current, threshold } = this.state\n        const translate = current * speed\n        const transform = translate - offset\n        const start = (top + offset) - translate\n        const end = (bottom + offset) - translate\n        const isVisible = start < (threshold + store.bounds.wh) && end > -threshold\n\n        return {\n            isVisible,\n            transform,\n            start,\n            end\n        }\n    }\n\n    init() {\n        const domEl = this.renderer.domElement\n\n        domEl.classList.add('dom-gl')\n        domEl.style.position = 'fixed'\n        domEl.style.pointerEvents = 'none'\n        domEl.style.top = 0\n        domEl.style.zIndex = -1\n\n        store.dom.body.appendChild(domEl)\n\n        this.on()\n    }\n\n    on() {\n        Events.on('tick', this.run)\n        Events.on('resize', this.onResize)\n    }\n\n    onResize() {\n        const { wh, ww } = store.bounds\n\n        // console.log('wh', wh)\n\n        this.renderer.domElement.width = ww\n        this.renderer.domElement.height = wh\n\n        this.camera.aspect = ww / wh\n\n        // Update the camera projection matrix\n        this.camera.updateProjectionMatrix()\n\n        // Set the renderer size.\n        this.renderer.setSize(ww, wh)\n    }\n}\n\nexport default new Gl()","export default \"precision mediump float;\\n\\nuniform sampler2D uTexture;\\nuniform float uVelo;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n    vec2 uv = vUv;\\n\\n    vec4 texture = texture2D(uTexture, uv);\\n\\n    // RGB shift\\n    uv.y += 0.15 * uVelo;\\n    if(uv.y < 1.) texture.g = texture2D(uTexture, uv).g;\\n\\n    uv.y += 0.10 * uVelo;\\n    if(uv.y < 1.) texture.b = texture2D(uTexture, uv).b;\\n\\n    gl_FragColor = texture;\\n}\"","export default \"precision mediump float;\\n\\nuniform sampler2D uVideoTexture;\\nuniform sampler2D uImageTexture;\\nuniform float uVelo;\\nuniform vec2 uScreenSize;\\nuniform vec2 uVideoSize;\\nuniform vec2 uImageSize;\\n\\nvarying vec2 vUv;\\n\\n// Credit to Jesper Landberg for the maths ( https://codepen.io/ReGGae/pen/aPpgbe )\\nvec2 backgroundCoverUv( vec2 screenSize, vec2 imageSize, vec2 uv ) {\\n\\n    float screenRatio = screenSize.x / screenSize.y;\\n    float imageRatio = imageSize.x / imageSize.y;\\n\\n    vec2 newSize = screenRatio < imageRatio\\n        ? vec2(imageSize.x * screenSize.y / imageSize.y, screenSize.y)\\n        : vec2(screenSize.x, imageSize.y * screenSize.x / imageSize.x);\\n\\n    vec2 newOffset = (screenRatio < imageRatio\\n        ? vec2((newSize.x - screenSize.x) / 2.0, 0.0)\\n        : vec2(0.0, (newSize.y - screenSize.y) / 2.0)) / newSize;\\n\\n    return uv * screenSize / newSize + newOffset;\\n\\n}\\n\\nvoid main() {\\n\\n    vec2 videoUv = backgroundCoverUv(uScreenSize, uVideoSize, vUv);\\n    vec2 imageUv = backgroundCoverUv(uScreenSize, uImageSize, vUv);\\n\\n    vec4 videoTexture = texture2D(uVideoTexture, videoUv);\\n    vec4 imageTexture = texture2D(uImageTexture, imageUv);\\n\\n    // // RGB shift\\n    // videoUv.y += 0.15 * uVelo;\\n    // if(videoUv.y < 1.) videoTexture.g = texture2D(uVideoTexture, videoUv).g;\\n\\n    // videoUv.y += 0.10 * uVelo;\\n    // if(videoUv.y < 1.) videoTexture.b = texture2D(uVideoTexture, videoUv).b;\\n\\n    gl_FragColor = mix(imageTexture, videoTexture, videoTexture.r);\\n}\"","export default \"precision mediump float;\\n\\nuniform sampler2D uTexture;\\nuniform float uVelo;\\nuniform vec2 uScreenSize;\\nuniform vec2 uVideoSize;\\n\\nvarying vec2 vUv;\\n\\n// Credit to Jesper Landberg for the maths ( https://codepen.io/ReGGae/pen/aPpgbe )\\nvec2 backgroundCoverUv( vec2 screenSize, vec2 imageSize, vec2 uv ) {\\n\\n    float screenRatio = screenSize.x / screenSize.y;\\n    float imageRatio = imageSize.x / imageSize.y;\\n\\n    vec2 newSize = screenRatio < imageRatio\\n        ? vec2(imageSize.x * screenSize.y / imageSize.y, screenSize.y)\\n        : vec2(screenSize.x, imageSize.y * screenSize.x / imageSize.x);\\n\\n    vec2 newOffset = (screenRatio < imageRatio\\n        ? vec2((newSize.x - screenSize.x) / 2.0, 0.0)\\n        : vec2(0.0, (newSize.y - screenSize.y) / 2.0)) / newSize;\\n\\n    return uv * screenSize / newSize + newOffset;\\n\\n}\\n\\nvoid main() {\\n\\n    vec2 uv = backgroundCoverUv(uScreenSize, uVideoSize, vUv);\\n\\n    vec4 texture = texture2D(uTexture, uv);\\n\\n    // RGB shift\\n    uv.y += 0.15 * uVelo;\\n    if(uv.y < 1.) texture.g = texture2D(uTexture, uv).g;\\n\\n    uv.y += 0.10 * uVelo;\\n    if(uv.y < 1.) texture.b = texture2D(uTexture, uv).b;\\n\\n    gl_FragColor = texture;\\n}\"","export default \"precision mediump float;\\n\\nuniform sampler2D uTexture;\\nuniform float uVelo;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n    vec2 uv = vUv;\\n\\n    vec4 texture = texture2D(uTexture, uv);\\n\\n    // RGB shift\\n    uv.y += 0.15 * uVelo;\\n    if(uv.y < 1.) texture.g = texture2D(uTexture, uv).g;\\n\\n    uv.y += 0.10 * uVelo;\\n    if(uv.y < 1.) texture.b = texture2D(uTexture, uv).b;\\n\\n    gl_FragColor = texture;\\n}\"","import {\n    vertex,\n    projectsFragment,\n    btnFragment\n} from './shaders'\n\nimport rgbSplitFragment from './fragment/rgb-split.frag'\nimport fullScreenVideoFragment from './fragment/full-screen-video.frag'\nimport careersFragment from './fragment/careers.frag'\nimport artistsFragment from './fragment/artists.frag'\n\nexport {\n    vertex,\n    rgbSplitFragment,\n    projectsFragment,\n    btnFragment,\n    fullScreenVideoFragment,\n    careersFragment,\n    artistsFragment,\n}","export const backgroundCoverUv = `\nvec2 backgroundCoverUv(vec2 screenSize, vec2 imageSize, vec2 uv) {\n    float screenRatio = screenSize.x / screenSize.y;\n    float imageRatio = imageSize.x / imageSize.y;\n\n    vec2 newSize = screenRatio < imageRatio\n    ? vec2(imageSize.x * screenSize.y / imageSize.y, screenSize.y)\n    : vec2(screenSize.x, imageSize.y * screenSize.x / imageSize.x);\n\n    vec2 newOffset = (screenRatio < imageRatio\n        ? vec2((newSize.x - screenSize.x) / 2.0, 0.0)\n        : vec2(0.0, (newSize.y - screenSize.y) / 2.0)) / newSize;\n\n        return uv * screenSize / newSize + newOffset;\n    }\n    `\n\n    export const vertex = `\n    precision mediump float;\n\n    varying vec2 vUv;\n\n    void main(){\n        vec3 pos = position;\n\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n    }\n    `\n\n    export const fragment = `\n    precision mediump float;\n\n    uniform sampler2D uTexture;\n    uniform float uVelo;\n\n    varying vec2 vUv;\n\n    void main() {\n        vec2 uv = vUv;\n\n        vec4 texture = texture2D(uTexture, uv);\n\n        // RGB shift\n        uv.y += 0.15 * uVelo;\n        if(uv.y < 1.) texture.g = texture2D(uTexture, uv).g;\n\n        uv.y += 0.10 * uVelo;\n        if(uv.y < 1.) texture.b = texture2D(uTexture, uv).b;\n\n        gl_FragColor = texture;\n    }\n    `\n\n    export const btnFragment = `\n    precision mediump float;\n\n    uniform float uProgress;\n    uniform float uTime;\n    uniform float uBend;\n    uniform bool uOut;\n\n    varying vec2 vUv;\n\n    vec4 a = vec4(vec3(19.0, 0.73, 0.8), 0.);\n    vec4 b = vec4(vec3(19.0, 0.73, 0.8), 1.);\n\n    void main() {\n        vec2 uv = vUv;\n\n        float bending = (cos(uTime * .0015 + uv.y * 3.) + sin(uTime * .0015 + uv.x * 3.));\n        float effect = bending * uBend;\n\n        if (uOut) {\n            uv.y -= effect * 0.4;\n        } else {\n            uv.y += effect * 0.2;\n        }\n\n        float transition = step(uv.y, uProgress);\n        vec4 color = mix(a, b, transition);\n\n        gl_FragColor = color;\n    }\n    `\n\n    export const projectsFragment = `\n    precision mediump float;\n\n    uniform sampler2D uTex1;\n    uniform sampler2D uTex2;\n    uniform sampler2D uTex3;\n    uniform sampler2D uTex4;\n    uniform sampler2D uTex5;\n    uniform sampler2D uTex6;\n\n    uniform float uProgress1;\n    uniform float uProgress2;\n    uniform float uProgress3;\n\n    varying vec2 vUv;\n\n    void main() {\n        vec2 uv = vUv;\n\n        vec4 tex1 = texture2D(uTex1, uv);\n        vec4 tex2 = texture2D(uTex2, uv);\n        vec4 tex3 = texture2D(uTex3, uv);\n        vec4 tex4 = texture2D(uTex4, uv);\n        vec4 tex5 = texture2D(uTex5, uv);\n        vec4 tex6 = texture2D(uTex6, uv);\n\n        float progress1 = step(uv.y, uProgress1);\n        vec4 mask1 = mix(tex1, tex2, progress1);\n\n        float progress2 = step(uv.y, uProgress2);\n        vec4 mask2 = mix(mask1, tex3, progress2);\n\n        float progress3 = step(uv.y, uProgress3);\n        vec4 mask3 = mix(mask2, tex4, progress3);\n\n        gl_FragColor = mask3;\n    }\n    `\n\n","/**\n*   Add any promises that need to be resolved before showing\n*   the page by using the add( promise ) method.\n*/\n\nconst AssetLoader = {\n\n    promisesToLoad: [],\n\n    load( { element = document.body, progress = false } = {} ) {\n\n        this.element = element\n        this.addMedia()\n\n        return this.loaded = new Promise( resolve => {\n\n            if( progress ) {\n\n                this.progressPromise( this.promisesToLoad, progress ).then( () => {\n                    this.promisesToLoad = []\n                    resolve()\n                })\n\n            } else {\n\n                Promise.all( this.promisesToLoad ).then( () => {\n                    this.promisesToLoad = []\n                    resolve()\n                })\n            }\n        })\n    },\n\n    add( promise ) {\n        this.promisesToLoad.push( promise )\n        return promise\n    },\n\n    addMedia() {\n\n        const images = this.element.querySelectorAll('img')\n        for( let i = 0; i < images.length; i++ ) {\n\n            this.promisesToLoad.push( new Promise( resolve => {\n\n                const imgEl = document.createElement('img')\n                imgEl.addEventListener('load', resolve )\n                imgEl.addEventListener('error', resolve )\n                imgEl.src = images[i].src\n\n            }) )\n        }\n\n        const videos = this.element.querySelectorAll('video')\n        for( let i = 0; i < videos.length; i++ ) {\n\n            this.promisesToLoad.push( new Promise( resolve => {\n\n                const videoEl = document.createElement('video')\n                videoEl.addEventListener('loadedmetadata', resolve )\n                videoEl.addEventListener('error', resolve )\n                videoEl.src = videos[i].src\n                videoEl.load()\n\n            }) )\n        }\n\n        // TODO: check background images\n    },\n\n    progressPromise( promises, tickCallback ) {\n\n        let len = promises.length\n        let progress = 0\n\n        function tick( promise ) {\n\n            promise.then(function () {\n                progress++\n                tickCallback(progress, len)\n            }).catch(reason => {\n                console.log(reason)\n            })\n\n            return promise\n\n        }\n\n        return Promise.all(promises.map(tick))\n\n    }\n\n}\n\nexport default AssetLoader","import gsap from 'gsap'\nimport store from '../../store'\n\nconst Fade = {\n\n  in (to) {\n    return new Promise(resolve => {\n      const duration = 1\n\n      store.flags.locked = false\n\n      gsap.fromTo(to, duration, {\n        opacity: 0\n      },\n      {\n        opacity: 1,\n        ease: 'Expo.easeInOut',\n        onComplete: () => { resolve() }\n      })\n    })\n  },\n\n  out (from) {\n    return new Promise(resolve => {\n      const duration = 1\n\n      store.flags.locked = true\n\n      gsap.to(from, duration, {\n        opacity: 0,\n        ease: 'Expo.easeInOut',\n        onComplete: () => { resolve()}\n      })\n    })\n  },\n}\n\nexport default Fade\n","import Highway from '@dogstudio/highway'\n\nHighway.initial = false\n\nimport {\n    DefaultRenderer,\n    HomeRenderer\n} from './renderers'\n\nimport {\n    DefaultTransition\n} from './transitions'\n\nexport default new Highway.Core({\n    renderers: {\n        home: HomeRenderer,\n        default: DefaultRenderer\n    },\n    transitions: {\n        default: DefaultTransition,\n        home: DefaultTransition,\n    }\n})","import Highway from '@dogstudio/highway'\n\nimport {\n    SmoothScroll,\n    Parallax,\n} from '../../components'\n\nimport AssetLoader from '../AssetLoader'\n\nimport { GlobalRaf, GlobalScroll } from '../../events'\nimport { listener, qsa } from '../../utils'\nimport PlanePool from '../../gl/PlanePool'\nimport store from '../../store'\nimport Gl from '../../gl'\n\nclass DefaultRenderer extends Highway.Renderer {\n    onEnter() {\n        this.el = this.wrap.lastElementChild\n    }\n\n    onLeave() {\n\n    }\n\n    onEnterCompleted() {\n\n        this.page = this.wrap.lastElementChild\n\n        AssetLoader.load( { element: this.page } ).then( () => {\n\n            this.handleSmoothScroll()\n\n            if (document.readyState === 'complete') {\n                GlobalScroll.setScrollBounds()\n                this.initPlanes()\n            } else {\n                listener(window, 'a', 'load', () => {\n                    GlobalScroll.setScrollBounds()\n                    SmoothScroll.resize()\n                    this.initPlanes()\n                })\n            }\n\n            if (!Highway.initial) {\n                Gl.init()\n                Highway.initial = true\n            }\n\n        })\n    }\n\n    onLeaveCompleted() {\n        GlobalRaf.reset()\n        this.removePlanes()\n\n        if (this.parallax) this.parallax.destroy()\n    }\n\n    handleSmoothScroll() {\n        if (!store.flags.smooth) return\n\n        const elems = qsa('[data-smooth-item]')\n        if (!Highway.initial && elems) {\n            SmoothScroll.init(elems)\n        } else if (elems) {\n            SmoothScroll.update(elems)\n        } else {\n            SmoothScroll.clean()\n        }\n    }\n\n    initParallax() {\n        const elems = qsa('[data-from]')\n        if (elems) (this.parallax = new Parallax(elems))\n    }\n\n    initPlanes() {\n        const elems = qsa('[data-gl-id]', this.el)\n        if (elems) {\n            for (let i = 0; i < elems.length; i++) {\n                PlanePool.fromDom(elems[i])\n            }\n        }\n    }\n\n    removePlanes() {\n        for (const name in PlanePool.planes) {\n            PlanePool.remove(PlanePool.planes[name])\n        }\n    }\n}\n\nexport default DefaultRenderer","import DefaultRenderer from './Default'\n// import store from '../../store'\nimport { qs } from '../../utils'\nimport { Landing, Waves, Careers, Artists, News } from '../../components'\n\nclass HomeRenderer extends DefaultRenderer {\n    onEnter() {\n        super.onEnter()\n    }\n\n    onLeave() {\n        super.onLeave()\n    }\n\n    onEnterCompleted() {\n        super.onEnterCompleted()\n        this.initLanding()\n        this.initWaves()\n        this.initCareers()\n        this.initArtists()\n        this.initNews()\n        // console.log(this.page)\n    }\n\n    onLeaveCompleted() {\n        super.onLeaveCompleted()\n\n        if (this.landing) this.landing.destroy()\n        if (this.waves) this.waves.destroy()\n        if (this.careers) this.careers.destroy()\n        if (this.artists) this.artists.destroy()\n        if (this.news) this.news.destroy()\n    }\n\n    initLanding() {\n        const el = qs('.section.landing', this.page)\n\n        if (el) this.landing = new Landing(el)\n    }\n\n    initWaves() {\n        const el = qs('.section.waves', this.page)\n\n        if (el) this.waves = new Waves(el)\n    }\n\n    initCareers() {\n        const el = qs('.section.careers', this.page)\n\n        if (el) this.careers = new Careers(el)\n    }\n\n    initArtists() {\n        const el = qs('.section.artists', this.page)\n\n        if (el) this.artists = new Artists(el)\n    }\n\n    initNews() {\n        const el = qs('.section.news', this.page)\n\n        if (el) this.news = new News(el)\n    }\n}\n\nexport default HomeRenderer","import DefaultRenderer from './Default'\nimport HomeRenderer from './Home'\n\nexport {\n    DefaultRenderer,\n    HomeRenderer,\n}","import Highway from '@dogstudio/highway'\nimport Fade from '../animations/Fade'\n\nclass DefaultTransition extends Highway.Transition {\n    in({ to, from, done }) {\n        Fade.in(to).then(() => {\n            from.remove()\n            done()\n        })\n    }\n\n    out({ from, done }) {\n        Fade.out(from).then(() => {\n            done()\n        })\n    }\n}\n\nexport default DefaultTransition","import DefaultTransition from './Default'\n\nexport {\n    DefaultTransition,\n}","import sniffer from 'sniffer'\n\nconst store = {\n    dom: {\n        body: document.body,\n        scroll: document.querySelector('[data-smooth]'),\n        sections: false\n    },\n    bounds: {\n        ww: window.innerWidth,\n        wh: window.innerHeight,\n        scroll: 0\n    },\n    flags: {\n        home: false,\n        locked: true,\n        dropdown: false,\n        resize: false,\n        allowScroll: true,\n        windows: ([\"Win32\", \"Win64\", \"Windows\", \"WinCE\"].indexOf(window.navigator.platform) !== -1)\n    }\n}\n\nObject.assign(store, sniffer.getInfos())\n\nstore.flags.smooth = store.isDesktop\n\nexport default store","import '../sass/style.scss'\n\nimport sniffer from 'sniffer'\n\nimport store from './store'\n\nimport {\n    listener,\n    qsa\n} from './utils'\n\nimport {\n    Events,\n    GlobalRaf,\n    GlobalScroll,\n    GlobalMouse\n} from './events'\n\nimport H from './highway'\n\nclass App {\n\n    constructor() {\n        this.setup()\n        this.init()\n    }\n\n    setup() {\n        sniffer.addClasses(store.dom.body)\n        listener(window, 'a', 'load', this.onLoad)\n    }\n\n    init() {\n        this.highwayEvents()\n        this.logoLink()\n    }\n\n    onLoad = () => {\n        store.flags.locked = false\n    }\n\n    highwayEvents() {\n        H.on('NAVIGATE_OUT', () => {\n            const links = qsa('.js-site-link')\n            links.forEach(link => {\n                link.classList.remove('is-active')\n                if (link.href === location.href) {\n                    link.classList.add('is-active')\n                }\n            })\n        })\n\n        H.on('NAVIGATE_IN', () => {\n            window.scrollTo(0, 0)\n        })\n    }\n\n    logoLink() {\n        Events.delegate('click', '.js-logo', (e) => {\n            e.preventDefault()\n            if (store.flags.dropdown) {\n                H.redirect(location.origin, 'menu')\n            } else {\n                H.redirect(location.origin)\n            }\n        })\n    }\n}\n\nnew App()","export function bindAll(object) {\n    const functions = [].slice.call(arguments, 1)\n    for(var i = 0; i < functions.length; i++) {\n        const f = functions[i]\n        object[f] = bind(object[f], object)\n    }\n}\n\nfunction bind(func, context) {\n    return function() {\n        return func.apply(context, arguments)\n    }\n}","export { lerp } from './lerp'\nexport { listener } from './listener'\nexport { normalize } from './normalize'\nexport { visible } from './visible'\nexport { bindAll } from './bindAll'\nexport { qs, qsa } from './selector'\nexport { wrap } from './wrap'","export function lerp(a, b, n) {\n    return a * (1 - n) + b * n\n}","export function listener(el, a, type, cb, p) {\n    const passive = p === true ? { passive: true } : false\n    const action = a === 'a' ? 'add' : 'remove'\n    return el[action + 'EventListener'](type, cb, passive)\n}","export function normalize(v, min, max) {\n    return (v - min) / (max - min)\n}","export const qs = (s, o = document) => o.querySelector(s)\nexport const qsa = (s, o = document) => o.querySelectorAll(s)\n","import store from '../store.js'\n\nexport function visible( { top, bottom }, current = 0, threshold = 0, offset = 0, speed = 1)\n{\n    const { bounds } = store\n    const translate = current * speed\n    const transform = translate - offset\n    const start = (top + offset) - translate\n    const end = (bottom + offset) - translate\n    const isVisible = start < (threshold + bounds.height) && end > -threshold\n    return {\n        isVisible,\n        transform,\n        start, end\n    }\n}","export function wrap(value, min, max) {\n    const v = value - min\n    const r = max - min\n    return ((r + v % r) % r) + min\n}\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAaA;AACA;AACA;AAAA;AACA;AACA;AAjBA;AA2DA;AACA;;;;;;;;;;;;;;AAiBA;AACA;AADA;AAGA;AACA;AAjFA;AAiLA;AACA;AAAA;AACA;AAAA;AACA;AACA;AApLA;AAEA;AACA;AAEA;AACA;AADA;AAIA;AACA;AACA;;;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;;;AA0BA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AACA;AAWA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AADA;AAGA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAQA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;AC3MA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AADA;AACA;AAGA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAJA;AAMA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AALA;AACA;AAOA;AACA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAFA;AAIA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;ACzIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;;;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AADA;AAIA;AADA;AAGA;AACA;AACA;AAHA;AAMA;AADA;AAGA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;AC/IA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;;;AAGA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AAEA;AACA;AADA;AAIA;AADA;AAGA;AACA;AACA;AAHA;AAMA;AADA;AAGA;AACA;AACA;AAHA;AAMA;AADA;AAGA;AACA;AACA;AAHA;AAMA;AADA;AAGA;AACA;AACA;AAHA;AAKA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;;;AAIA;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AAmCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAzCA;AA0CA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAjDA;AAkDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AA3DA;AA6DA;AACA;AACA;AA9DA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AADA;AAGA;;;;;;AAgCA;;;;;;;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AAwCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AA5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;;;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;;;AAQA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;;;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AADA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AADA;AAIA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACxGA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AA4BA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA;AA4CA;AACA;AACA;AACA;AA/CA;AAgDA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAzDA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA;AAKA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;;;AAiCA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AADA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;;AAxEA;AACA;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAKA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;AA/BA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAPA;AAUA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;AA7CA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAKA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;AAjCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;AA7BA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;AAhCA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAOA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AA8BA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA;AAEA;AAHA;AAAA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;;;AAmBA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;;;;;AAGA;;;;;;;;;;;;ACvHA;AAAA;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAaA;AAwBA;AAgCA;;;;;;;;;;;;ACtFA;AAAA;;;;AAKA;AAEA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AAZA;AACA;AAEA;AAAA;AAUA;AACA;AACA;AACA;AAhBA;AAkBA;AAEA;AACA;AACA;AACA;AACA;AAEA;AA1BA;AACA;AAeA;AAAA;AAWA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AArFA;AAyFA;;;;;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AA/BA;AAkCA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAKA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;;;AAIA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;;AA1EA;AACA;AA4EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AAEA;AACA;;;;AAzDA;AACA;AA2DA;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;AAZA;AACA;AAcA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAXA;AAqBA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AAEA;AAEA;AAEA;AAKA;AAOA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAgBA;AACA;AACA;AAjBA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;ACrEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAHA;AAKA;;;;;;;;;;;;ACfA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;A","sourceRoot":""}