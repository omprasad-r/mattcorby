{#
/**
 * @file
 * Theme override for the basic structure of a single Drupal page.
 *
 * Variables:
 * - logged_in: A flag indicating if user is logged in.
 * - root_path: The root path of the current page (e.g., node, admin, user).
 * - node_type: The content type for the current node, if the page is a node.
 * - head_title: List of text elements that make up the head_title variable.
 *   May contain or more of the following:
 *   - title: The title of the page.
 *   - name: The name of the site.
 *   - slogan: The slogan of the site.
 * - page_top: Initial rendered markup. This should be printed before 'page'.
 * - page: The rendered page markup.
 * - page_bottom: Closing rendered markup. This variable should be printed after
 *   'page'.
 * - db_offline: A flag indicating if the database is offline.
 * - placeholder_token: The token for generating head, css, js and js-bottom
 *   placeholders.
 *
 * @see template_preprocess_html()
 */
#}
{%
  set body_classes = [
    logged_in ? 'user-logged-in',
    not root_path ? 'path-frontpage' : 'path-' ~ root_path|clean_class,
    node_type ? 'page-node-type-' ~ node_type|clean_class,
	node_type|clean_class == "page" ? 'landing-page',
	node_type|clean_class != "page" ? 'detail-page',
	path_info.args ? 'page-node-' ~ path_info.args,
	path_info.args ? 'page-node-id-' ~ path_info.args,
    db_offline ? 'db-offline',
  ]
%}  
<!DOCTYPE html>
<html{{ html_attributes }}>
  <head>
    <base href="/">
    <head-placeholder token="{{ placeholder_token|raw }}">
    <title>{{ head_title|safe_join(' | ') }}</title>
        
        <script>
    function getOmniturePageConfig2(path) {

      var regexPattern = {
        home: /\//,
        blog: /\/news/,
        blogDetail: /\/news\//,
        blogCategory: /\/tags\//,
        video: /\/video/,
        videoDetail: /\/video\//,
        mailinglist: /\/mailing-list/,
        store: /\/merch/,
        about: /\/about/,
        contact: /\/contact-us/,
        search: /\/search/,
        pageNotFound: /\/404/,
        pageNotFound2: /\/.+/,
      };

      var pageConfig = {
        artistName: 'Cool Accidents',
        platform: 'Drupal 8',
        reportSuites : 'wmg,wmgau,wmgcoolaccidents.com',
        label: 'Warner Music International',
        sublabel: 'Warner Music Australia',
        server: 'Cool Accidents:Site'
      };

      var pathPattern, title = "";
      switch (true) {
        case regexPattern.blogDetail.test(path): pathPattern = '/blogDetail'; title = path.split('/').pop(); break;
        case regexPattern.blogCategory.test(path): pathPattern = '/blogCategory'; title = path.split('/').pop(); break;
        case regexPattern.blog.test(path): pathPattern = '/blog'; break;
        case regexPattern.videoDetail.test(path): pathPattern = '/videoDetail'; title = path.split('/').pop(); break;
        case regexPattern.video.test(path): pathPattern = '/video'; break;
        case regexPattern.mailinglist.test(path): pathPattern = '/mailing-list'; break;
        case regexPattern.store.test(path): pathPattern = '/store'; break;
        case regexPattern.about.test(path): pathPattern = '/about'; break;
        case regexPattern.contact.test(path): pathPattern = '/contact'; break;
        case regexPattern.search.test(path): pathPattern = '/search'; break;
        case regexPattern.pageNotFound.test(path): pathPattern = "/404"; break;
        case regexPattern.pageNotFound2.test(path): pathPattern = "/404"; break;
        case regexPattern.home.test(path): pathPattern = '/'; break;
      }

      title = decodeURIComponent(title);
      let customOmniTitle = title ? title.charAt(0).toUpperCase() + title.substr(1).toLowerCase() : '';
      customOmniTitle = customOmniTitle.split('-').join(' ');
      console.log("customOmniTitle is : " + customOmniTitle);

      var page = {
        '/': {
            pageInfo: {
                pageName: pageConfig.artistName + ':Homepage',
            },
            category: {
                primaryCategory: pageConfig.artistName + ':Home',
                pageType: 'homepage'
            }
        },
        '/video': {
            pageInfo: {
                pageName: pageConfig.artistName + ':Videos',
            },
            category: {
                primaryCategory: pageConfig.artistName + ':Videos',
                pageType: 'videos:landing'
            }
        },
        '/videoDetail': {
            pageInfo: {
                pageName: pageConfig.artistName + ':Videos:' + title,
            },
            category: {
                primaryCategory: pageConfig.artistName + ':Videos',
                pageType: 'videos:details'
            }
        },
        '/blog': {
            pageInfo: {
                pageName: pageConfig.artistName + ':News',
            },
            category: {
                primaryCategory: pageConfig.artistName + ':News',
                pageType: 'news:landing'
            }
        },
        '/blogDetail': {
            pageInfo: {
                pageName: pageConfig.artistName + ':News:' + title
            },
            category: {
                primaryCategory: pageConfig.artistName + ':News',
                pageType: 'news:article'
            }
        },
        '/blogCategory': {
            pageInfo: {
                pageName: pageConfig.artistName + ':News:' + title
            },
            category: {
                primaryCategory: pageConfig.artistName + ':News',
                pageType: 'news:category'
            }
        },
        '/store': {
            pageInfo: {
                pageName: pageConfig.artistName + ':Store'
            },
            category: {
                primaryCategory: pageConfig.artistName + ':Store',
                pageType: 'store:landing'
            }
        },
        '/about': {
            pageInfo: {
                pageName: pageConfig.artistName + ':About'
            },
            category: {
                primaryCategory: pageConfig.artistName + ':About',
                pageType: 'about'
            }
        },
        '/contact': {
            pageInfo: {
                pageName: pageConfig.artistName + ':Contact Us'
            },
            category: {
                primaryCategory: pageConfig.artistName + ':Contact Us',
                pageType: 'contact us'
            }
        },
        '/mailing-list': {
            pageInfo: {
                pageName: pageConfig.artistName + ':Mailing List Sign-up'
            },
            category: {
                primaryCategory: pageConfig.artistName + ':Mailing List Sign-up',
                pageType: 'mailing list sign-up'
            }
        },
        '/search': {
            pageInfo: {
                pageName: pageConfig.artistName + ':Search:Results',
                // onsiteSearchTerms: '',
                // onsiteSearchResults: ''
            },
            category: {
                primaryCategory: pageConfig.artistName + ':Search',
                pageType: 'search:results'
            }
        },
           "/404": {
                pageInfo: {
                    pageName: pageConfig.artistName + ":404 Error",

                },
                category: {
                    primaryCategory: pageConfig.artistName + ":Error",
                    pageType: "Error"
                }
            }
      }

      var data = page[pathPattern];
      data.pageConfig = pageConfig;
      return data;
    }
        
        var pathname = window.location.pathname;
        var result = getOmniturePageConfig2(pathname);
    digitalData = {
        settings: {
            reportSuites: result.pageConfig.reportSuites || ""
        },
        page: {
            pageInfo: {
                pageName: result.pageInfo.pageName || "",
                server: result.pageConfig.server || "",
                platform: result.pageConfig.platform || ""
            },
            category: {
                primaryCategory: result.category.primaryCategory || "",
                pageType: result.category.pageType || ""
            }
        },
        content: {
            artist: result.pageConfig.artistName || "",
            label: result.pageConfig.label || "",
            sublabel: result.pageConfig.sublabel || ""
        }
    };
    </script>
    <css-placeholder token="{{ placeholder_token|raw }}">
    	
    <js-placeholder token="{{ placeholder_token|raw }}">	
	
	<meta http-equiv="Content-type" content="text/html; charset=utf-8"> 
	<meta name="google-site-verification" content="hYxWiPMdqOPN3jjnW9rmJNF-_zT_SsMOflKy618IzpQ" />
	<title>Widgets Magazine</title> 
	<style type="text/css" media="screen"> 
	</style>


	<script src="https://use.typekit.net/evo1rml.js"></script>
	<script>try{Typekit.load({ async: true });}catch(e){}</script>
	  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.css" />
  <script src="//apis.google.com/js/platform.js"></script>
	<!-- Shopify JS -->
	<script src="https://sdks.shopifycdn.com/buy-button/latest/buy-button-storefront.min.js"></script>
	
	<script async='async' src='https://www.googletagservices.com/tag/js/gpt.js'></script>
	<script>
	  var googletag = googletag || {};
	  googletag.cmd = googletag.cmd || [];
	</script>

	<!-- Home ADs -->
	<!--<script>
    // Extract article title from url
    pageURL = window.location.pathname;
    pageURLArray = pageURL.split('/');
    articleURL = '';
    while (pageURLArray.length > 0 && articleURL == '') {
        articleURL = pageURLArray.pop();
    }
        console.log(articleURL);
    googletag.cmd.push(function() {
        if ( window.location.pathname == '/' ){
            // Define ad slots and slot-level targeting 
            var slot1 = googletag.defineSlot('/21664395848/coolaccidents_ROS/home', 'fluid', 'dfp-ad-slot-1')
                .addService(googletag.pubads()).setTargeting("pos", "1")
            var slot2 = googletag.defineSlot('/21664395848/coolaccidents_ROS/home', [300, 250], 'dfp-ad-slot-2')
                .addService(googletag.pubads()).setTargeting("pos", "2")
            // Set page-level key-values
            googletag.pubads().setTargeting("pageURL", [articleURL]).setTargeting("pagetype", ["home"]);
        }
        else if(window.location.pathname.indexOf('news/') != -1){
            // Define responsive ad size mapping 
			var mapslot1 = googletag.sizeMapping()
				.addSize([0, 0], [300, 250])
				.addSize([997, 0], [[300, 250],[300, 600],[300, 1050]]).build();	
            // Define ad slots and slot-level targeting 
            var slot1 = googletag.defineSlot('/21664395848/coolaccidents_ROS/latestnews', [[300, 250],[300,600],[300, 1050]], 'dfp-ad-slot-1').defineSizeMapping(mapslot1)
                .addService(googletag.pubads()).setTargeting("pos", "1")
			// Set page-level key-values
            googletag.pubads().setTargeting("pageURL", [articleURL]).setTargeting("pagetype", ["article"]);

        }
        else if(window.location.pathname.indexOf('tags/') != -1){
            var tagpages = ["new music", "reviews", "interviews", "tours", "win"];
           if(tagpages.includes(articleURL)){
               if(articleURL == "new music"){
                    articleURL = "newmusic";
               }
               console.log(articleURL);
               // Define ad slots and slot-level targeting 
            var slot1 = googletag.defineSlot('/21664395848/coolaccidents_ROS/' + articleURL, [[300, 250],['fluid']], 'dfp-ad-slot-1')
                .addService(googletag.pubads()).setTargeting("pos", "1")
			// Set page-level key-values
            googletag.pubads().setTargeting("pageURL", [articleURL]).setTargeting("pagetype", ["index"]);

           }
            
        }
		else if(window.location.pathname.indexOf('/news') != -1){
            var tagpages = ["blog"];
           if(tagpages.includes(articleURL)){
               // Define ad slots and slot-level targeting 
            var slot1 = googletag.defineSlot('/21664395848/coolaccidents_ROS/latestnews', [[300, 250],['fluid']], 'dfp-ad-slot-1')
                .addService(googletag.pubads()).setTargeting("pos", "1")
			// Set page-level key-values
            googletag.pubads().setTargeting("pageURL", [articleURL]).setTargeting("pagetype", ["index"]);

           }
            
        }
			
			
            googletag.pubads().enableAsyncRendering();
            googletag.pubads().collapseEmptyDivs(true);
            googletag.pubads().setCentering(true);
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });

  </script>-->


	<!-- Hammer JS -->
	<script type="text/javascript" src="/{{ base_path ~ directory }}/lib/hammer.js?"></script>
	<!--link rel="stylesheet" href="maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css"-->
	<link rel="stylesheet" href="//cdn.jsdelivr.net/gridlex/2.0.9/gridlex.min.css">
	<link type="text/css" rel="stylesheet" href="//fast.fonts.net/cssapi/18283877-cebd-41e3-9ad6-7ba7a09c8bb8.css?1"/>
	<link href="/{{ base_path ~ directory }}/assets/normalize.css" rel="stylesheet" />
	<link href="/{{ base_path ~ directory }}/css/global-style.css" rel="stylesheet" />
	<link href="/{{ base_path ~ directory }}/styles.ad51d174eedd810abae6.bundle.css" rel="stylesheet" />
	
	
	<script src="//assets.adobedtm.com/31543e7db99435a92d6f4a2cf97c808672ed7dd0/satelliteLib-b6e3529c31d92a9252c30c1714b6b9342304145b.js"></script>
        
  </head>
  <body{{ attributes.addClass(body_classes) }}>

	<!--
	  <ol>
	  {% for key, value in _context  %}
		<li>{{ key }}</li>
	  {% endfor %}
	</ol>
	-->
    {{ page_top }}
    {{ page }}
    {{ page_bottom }}	
	
    <js-bottom-placeholder token="{{ placeholder_token|raw }}">
 <script type="text/javascript" src="/{{ base_path ~ directory }}/inline.2d143403cc390fa43659.bundle.js"></script>
    <script type="text/javascript" src="/{{ base_path ~ directory }}/polyfills.c8fae11b69fb7d25c300.bundle.js"></script>
	<script type="text/javascript" src="/{{ base_path ~ directory }}/vendor.ddc8c4b0897cd10354e9.bundle.js"></script>
	<script type="text/javascript" src="/{{ base_path ~ directory }}/main.b882dff8f8c8a3bd7e50.bundle.js"></script>
  </body>
   
</html>
